variables:
  UPSTREAM_GIT_URL: 'https://github.com/jpillora/chisel.git'
  UPSTREAM_DOCKERFILE_PATH: '.'

  # We make use of git submodules.  This ensures they are checked out with the
  #  rest of this repository
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - run-backups
  - docker-get-version
  - docker-build
  - docker-push

include:
  - project: applications/tooling
    ref: main
    file: 'gitlab-ci-includes/build-oci-image.yml'

run-backups-ph3-local:
  stage: run-backups
  tags:
    - lu-ghanima-local
  image:
    name: cr.ghanima.net/applications/sanoid/syncoid-pull-server:latest
    entrypoint: [""]
  variables:
    SSH_REMOTE_HOST: ph3.local
    SSH_PORT: 10022
    SSH_PRIVKEY: $PH3LOCAL_SSH_PRIVKEY
    SSH_KNOWN_HOSTS: $PH3LOCAL_SSH_KNOWN_HOSTS
    SOURCE_DATASET: SSD1/VMs/machines/portainer1.ghanima.net
    DESTINATION_DATASET: SLAB/Backups/Syncoid/ph3.local/portainer1.ghanima.net
  artifacts:
    paths:
      - backup_result.json
  rules:
    - if: $RUNBACKUPS
  script:
    # Always install the latest tooling, not the latest submodule commit
    # cd .submodules/
    # git pull
    # git submodule update --init --recursive
    # git pull --recurse-submodules origin main
    # git submodule sync --recursive
    # git submodule update --remote --merge
    # cd ..
    # Run the script
    - tooling/run_syncoid.sh

docker-chisel-image-get-version:
  stage: docker-get-version
  extends: .docker:get-version
  image: bash:latest
  variables:
    UPSTREAM_GIT_URL: 'https://github.com/jpillora/chisel.git'
    UPSTREAM_DOCKERFILE_PATH: '.'
    IMAGE_NAME: 'chisel'
  rules:
    - if: $DOCKERIMAGEUPDATE
  script:
    - |
      OPWD=$(pwd)
      IMAGE_NAME="${IMAGE_NAME:-$(basename "${CI_REGISTRY_IMAGE}")}"

      apk add git || apt install git
      git clone ${UPSTREAM_GIT_URL} "${OPWD}/build-tmp"
      cd "${OPWD}/build-tmp"
      latest_tag=$(git describe --abbrev=0 --tags)
      cd "${OPWD}"
      echo "VERSION_TAGS[latest]=${latest_tag}" | tee -a ${IMAGE_NAME}-VERSION_TAGS
      cat ${IMAGE_NAME}-VERSION_TAGS
      readlink -f "${IMAGE_NAME}-VERSION_TAGS"

docker-chisel-image-build:
  stage: docker-build
  extends: .docker:build-image-from-upstream
  variables:
    UPSTREAM_GIT_URL: 'https://github.com/jpillora/chisel.git'
    UPSTREAM_DOCKERFILE_PATH: '.'
    IMAGE_NAME: 'chisel'
  rules:
    - if: $DOCKERIMAGEUPDATE

docker-chisel-image-push:
  stage: docker-push
  extends: .docker:push-image-to-registry
  variables:
    UPSTREAM_GIT_URL: 'https://github.com/jpillora/chisel.git'
    UPSTREAM_DOCKERFILE_PATH: '.'
    IMAGE_NAME: 'chisel'
  rules:
    - if: $DOCKERIMAGEUPDATE

docker-syncoid-server-image-get-version:
  stage: docker-get-version
  extends: .docker:get-version
  image: bash:latest
  variables:
    DOCKERFILE_PATH: 'pull-server'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-server'
    IMAGE_NAME: 'syncoid-pull-server'
    #TODO: Tags/versions should track the upstream gitlab-runner image
  rules:
    - if: $DOCKERIMAGEUPDATE
  script:
    - |
      IMAGE_NAME="${IMAGE_NAME:-$(basename "${CI_REGISTRY_IMAGE}")}"
      echo "VERSION_TAGS[latest]=jammy" | tee -a ${IMAGE_NAME}-VERSION_TAGS

docker-syncoid-server-image-build:
  stage: docker-build
  extends: .docker:build-image-from-dockerfile
  variables:
    DOCKERFILE_PATH: 'pull-server'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-server'
    IMAGE_NAME: 'syncoid-pull-server'
  rules:
    - if: $DOCKERIMAGEUPDATE

docker-syncoid-server-image-push:
  stage: docker-push
  extends: .docker:push-image-to-registry
  variables:
    DOCKERFILE_PATH: 'pull-server'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-server'
    IMAGE_NAME: 'syncoid-pull-server'
  rules:
    - if: $DOCKERIMAGEUPDATE

docker-sanoid-client-image-get-version:
  stage: docker-get-version
  extends: .docker:get-version
  image: bash:latest
  variables:
    DOCKERFILE_PATH: 'pull-client'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-client'
    IMAGE_NAME: 'syncoid-pull-client'
  rules:
    - if: $DOCKERIMAGEUPDATE
  script:
    - |
      IMAGE_NAME="${IMAGE_NAME:-$(basename "${CI_REGISTRY_IMAGE}")}"
      echo "VERSION_TAGS[latest]=jammy" | tee -a ${IMAGE_NAME}-VERSION_TAGS

docker-sanoid-client-image-build:
  stage: docker-build
  extends: .docker:build-image-from-dockerfile
  variables:
    DOCKERFILE_PATH: 'pull-client'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-client'
    IMAGE_NAME: 'syncoid-pull-client'
  rules:
    - if: $DOCKERIMAGEUPDATE

docker-sanoid-client-image-push:
  stage: docker-push
  extends: .docker:push-image-to-registry
  variables:
    DOCKERFILE_PATH: 'pull-client'
    DOCKERFILE_NAME: 'Dockerfile.syncoid-pull-client'
    IMAGE_NAME: 'syncoid-pull-client'
  rules:
    - if: $DOCKERIMAGEUPDATE

.run-backups:
  tags:
    TODO
  image: cr.ghanima.net/applications/sanoid-helper-scripts/syncoid-pull:latest
  script: |
    echo "Hi"
    exit 0
